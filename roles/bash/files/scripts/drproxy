#!/usr/bin/env bash

declare DEFAULT_URL="http://internet.ford.com:83"
declare URL="${DEFAULT_URL}"
declare PAC_URL=http://www.browsers.ford.com/mac/mac.js

# Terminal text colors
NC=$(printf "\033[0m")
GREEN=$(printf "\033[0;32m")

do_dr_proxy()
{

    declare SILENT=false
    declare proxy_host=
    declare proxy_port=
    declare ACTION=

    while (( $# )); do
        case "${1}" in

            --silent) SILENT=true; shift;;
            --loud) SILENT=false; shift;;
            --disable-pre-unset) PRE_UNSET=false; shift;;
            --disable-npm-proxy-unset) NPM_PROXY_UNSET=false; shift;;
            --url) URL="$2"
                shift 2
                ;;
            --on) ACTION="on"
                shift
                ;;

            --off) ACTION="off"
                shift
                ;;

            --help)
                echo "${0##*/} [--silent] [--on|--off] [--url http://<proxy_hostname>:<port_number>] [--help]";
                return 0
                ;;

            -*)
                echo "unknown option: '$1'"
                shift
                return 1
                ;;
            *)
                # positional args found
                echo "unknown positional argument $1"
                return 1
                ;;
        esac
    done
    NPM_PROXY_UNSET="${NPM_PROXY_UNSET:-true}"
    # To allow disabling of proxy settings prior to enabling
    PRE_UNSET=${PRE_UNSET:="true"}
    if [[ "${PRE_UNSET}" == "true" ]];
    then
        unsetProxySettings
    fi

    if curl --noproxy "www.google.com" --max-time 10 --output /dev/null --silent --head --fail "https://www.google.com"; then
        ACTION=${ACTION:="off"}
        ${SILENT} || echo "Off corporate network"
    else
        ACTION=${ACTION:="on"}
        ${SILENT} || echo "On corporate network"
    fi

    if [[ "${ACTION}" = "on" ]]
    then
        ${SILENT} ||  echo "Enabling proxy settings..."
        setProxySettings
        ${SILENT} ||  echo "${GREEN}Done${NC}"
    else
        if [[ "${PRE_UNSET}" != "true" ]];
        then
            unsetProxySettings
        fi
        ${SILENT} ||  echo "${GREEN}Proxy settings disabled${NC}"
    fi

    return 0
}

setProxyFromPac() {
    # Get the first non-localhost IPv4 address
    myIp=$(ifconfig | awk '/\s*inet ([0-9]+\.){3}[0-9]+/ && !/127\./ { print $2; exit 0 }')
    # Download the standard Ford PAC file
    pacFile=$(mktemp)
    curl -s ${PAC_URL} > ${pacFile}
    # Execute the pactester program, which will run the PAC file to determine
    # the right proxy for our IP.
    # Expecting a result in the form "PROXY 1.2.3.4:56; PROXY 2.3.4.5:66`
    pacProxy=$(pactester -p ${pacFile} -u https://www.google.com -c ${myIp})
    rm ${pacFile}
    # Extract the first proxy from all that
    pacHost=$(echo ${pacProxy} | egrep -o '([0-9]+.){3}[0-9]+:[0-9]+' | head -1)
    URL=http://${pacHost}
}

# Turns Proxy on
setProxySettings() {
    which pactester >/dev/null
    if [ $? -eq 0 ]; then
        # "pactester" binary is present, so use it to run the PAC JavaScript
        setProxyFromPac
        ${SILENT} || echo "Using proxy ${URL}"
    else
        # Use the default Ford proxy
        ${SILENT} || echo "Using default proxy ${URL}"
    fi

    proxy="${URL#*//}"
    proxy_port=${proxy#*:}
    proxy_host="${proxy%:*}"
    proxy_host_no_protocol="${proxy_host#*//}"
    proxy_url="$URL"

    no_proxy_array=(
        # Internal IP addresses (rfc5735, rfc6761)
        'localhost'
        'localhost.ford.com'
        '127.0.0.0/8'
        # Ford owned /8 block
        '19.0.0.0/8'
        # rfc1918 IP addresses
        '10.0.0.0/8'
        '172.16.0.0/12'
        '192.168.0.0/16'
        # Link local
        '169.254.0.0/16'
        # CaaS cluster domains. Generate with:
        #  for line in $(curl -sL https://clusters.caas.ford.com | jq -r 'to_entries | .[].value.consoleServerURL' | sed -E 's/https:\/\/console-openshift-console\.apps\.\w+\./\*\./g' | sort -u); do echo "        '${line}'"; done
        '*.caas.dearborntruck.ford.com'
        '*.caas.gcp.ford.com'
        '*.caas.itek.ford.com'
        '*.caas.ks1.ford.com'
        '*.caas.michtruck.ford.com'
        '*.caas.niehl.ford.com'
        '*.caas.oakville.ford.com'
        '*.caas.sh8.ford.com'
        '*.caasdev.ford.com'
        '*.edc.caas.ford.com'
        # CaaS other
        '*.caas.ford.com'
        '*.ide.ford.com'
        'registry.ford.com'
        # Cloud Foundry
        '*.pcf.ford.com'
        '*.edc1.cf.ford.com'
        '*.edc2.cf.ford.com'
        '*.ks1.cf.ford.com'
        '*.sh8.cf.ford.com'
        '*.cf.gcp.ford.com'
        '*.bosh'
        # Vault
        'vault.app.ford.com'
        'vaultdev.app.ford.com'
        'vault-os.app.ford.com'
        # VSphere hosts
        '*.f01.dc1.ford.com'
        '*.f02.dc2.ford.com'
        '*.f07.sh8.ford.com'
        '*.f08.ks1.ford.com'
        '*.hosts.cloud.ford.com'
        # Commonly used for internal domains
        '*.internal'
        '*.local'
        # Google is peered with Ford. No need to proxy. List from here: https://github.ford.com/gcp/internetproxy
        '*.appspot.com'
        '*.cloudfunctions.net'
        '*.cloudproxy.app'
        '*.composer.cloud.google.com'
        '*.composer.googleusercontent.com'
        '*.datafusion.cloud.google.com'
        '*.datafusion.googleusercontent.com'
        '*.gcr.io'
        '*.googleadapis.com'
        '*.googleapis.com'
        '*.gstatic.com'
        '*.ltsapis.goog'
        '*.packages.cloud.google.com'
        '*.pkg.dev'
        '*.pki.goog'
        '*.run.app'
        '*.source.developers.google.com'
        '*.gcp.cloud.es.io'
        '*.smt-gce.susecloud.net'
        # Misc internal
        '*.labs.ford.com'
        '*.certman.ford.com'
        'github.ford.com'
        'pypi.tat.ford.com'
        's3-object.ford.com'
        'www.gsoutils.ford.com'
        'www.nexus.ford.com'
    )
    # shellcheck disable=SC2001
    no_proxy_list=$(IFS=,; echo "${no_proxy_array[*]}" | sed 's/\*//g')
    non_proxy_hosts=$(IFS="|"; echo "${no_proxy_array[*]}")

    java_properties="-Dhttps.proxyHost=$proxy_host_no_protocol -Dhttps.proxyPort=$proxy_port -Dhttps.nonProxyHosts='$non_proxy_hosts' -Dhttp.proxyHost=$proxy_host_no_protocol -Dhttp.proxyPort=$proxy_port -Dhttp.nonProxyHosts='$non_proxy_hosts'"

    # Terminal proxies
    # NPM also uses these env vars
    export http_proxy="$proxy_url"
    export https_proxy="$proxy_url"
    export all_proxy="$proxy_url"
    export no_proxy="$no_proxy_list"

    export HTTP_PROXY="$proxy_url"
    export HTTPS_PROXY="$proxy_url"
    export ALL_PROXY="$proxy_url"
    export NO_PROXY="$no_proxy_list"

    # JVM proxies
    export gradle_opts="$java_properties"
    export GRADLE_OPTS="$java_properties"
    export maven_opts="$java_properties"
    export MAVEN_OPTS="$java_properties"

}

# Turns Proxy off
unsetProxySettings() {
    # Terminal proxies
    unset http_proxy
    unset https_proxy
    unset all_proxy
    unset no_proxy

    unset HTTP_PROXY
    unset HTTPS_PROXY
    unset ALL_PROXY
    unset NO_PROXY

    # JVM proxies
    unset gradle_opts
    unset maven_opts

    unset MAVEN_OPTS
    unset GRADLE_OPTS

    # NPM proxies
    if [[ "${NPM_PROXY_UNSET}" == "true" ]] && type npm > /dev/null 2>&1; then
        npm config --quiet delete proxy
        npm config --quiet delete https-proxy
        npm config --quiet delete noproxy
    fi
}

do_dr_proxy "$@"
