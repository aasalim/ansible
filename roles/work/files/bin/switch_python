#!/bin/bash

# Function to install Python versions if not already installed
install_python() {
    local version=$1
    if ! command -v python$version &> /dev/null; then
        echo "Python $version is not installed. Installing..."
        sudo apt update
        sudo apt install -y software-properties-common
        sudo add-apt-repository -y ppa:deadsnakes/ppa
        sudo apt update
        sudo apt install -y python$version
    else
        echo "Python $version is already installed."
    fi
}

# Function to register Python versions with update-alternatives
register_python() {
    local version=$1
    local priority=$2
    if command -v python$version &> /dev/null; then
        sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python$version $priority
        echo "Registered Python $version with update-alternatives."
    else
        echo "Python $version is not installed. Please install it first."
    fi
}

# Function to switch Python version
switch_python() {
    local version=$1
    if command -v python$version &> /dev/null; then
        sudo update-alternatives --set python3 /usr/bin/python$version
        echo "Switched to Python $version."
        echo "Current Python3 version: $(python3 --version)"
    else
        echo "Python $version is not installed. Please install it first."
    fi
}

# Main script logic
if [[ $# -ne 1 ]]; then
    echo "Usage: $0 {3.10|3.11}"
    exit 1
fi

version=$1

if [[ "$version" != "3.10" && "$version" != "3.11" ]]; then
    echo "Invalid Python version. Please choose either 3.10 or 3.11."
    exit 1
fi

# Install the selected Python version if not already installed
install_python $version

# Register Python versions with update-alternatives (if not already registered)
register_python 3.10 1
register_python 3.11 2

# Switch to the selected Python version
switch_python $version
