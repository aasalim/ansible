- name: "{{ ansible_distribution }} : Check if SSH key files already exist"
  stat:
    path: "{{ ansible_user_dir }}/.ssh/{{ ssh_key_item.key }}"
  loop: "{{ ssh_key | default({}) | dict2items }}"
  loop_control:
    loop_var: ssh_key_item
  register: ssh_key_files_status

- name: "{{ ansible_distribution }} : Copy SSH keys"
  copy:
    dest: "{{ ansible_user_dir }}/.ssh/{{ ssh_key_item.key }}"
    content: "{{ ssh_key_item.value }}"
    mode: '0600'
  loop: "{{ ssh_key | default({}) | dict2items }}"
  loop_control:
    loop_var: ssh_key_item

    - name: "Show result for each SSH key file"
  debug:
    msg: "{{ item.item.key }} exists: {{ item.stat.exists }}"
  loop: "{{ ssh_key_files_status.results }}"
  loop_control:
    loop_var: item

- name: "{{ ansible_distribution }} : Add SSH keys"
  block:
    - name: "{{ ansible_distribution }} : Start ssh-agent"
      shell: |
        eval $(ssh-agent -s)
        echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" > /tmp/ssh-agent.env
        echo "SSH_AGENT_PID=$SSH_AGENT_PID" >> /tmp/ssh-agent.env
      args:
        executable: /bin/bash

    - name: "{{ ansible_distribution }} : Add SSH keys to agent"
      shell: |
        source /tmp/ssh-agent.env
        ssh-add {{ ansible_user_dir }}/.ssh/{{ ssh_key_item.key }}
      args:
        executable: /bin/bash
      loop: "{{ ssh_key | default({}) | dict2items }}"
      loop_control:
        loop_var: ssh_key_item

      when: "'pub' not in ssh_key_item.key"  # Skip .pub files


    - name: "{{ ansible_distribution }} : Clean up ssh-agent environment file"
      file:
        path: /tmp/ssh-agent.env
        state: absent
